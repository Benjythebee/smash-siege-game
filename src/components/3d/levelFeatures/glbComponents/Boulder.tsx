/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/models/Boulder.glb -t 
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    boulder: THREE.Mesh;
  };
  materials: {
    None: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export const Boulder = React.forwardRef((props: JSX.IntrinsicElements['group'], ref: any) => {
  const { nodes, materials } = useGLTF('./models/Boulder.glb') as GLTFResult;
  return (
    <group {...props} ref={ref} dispose={null}>
      <mesh geometry={nodes.boulder.geometry} scale={[0.7, 0.7, 0.7]} material={materials.None} />
    </group>
  );
});
Boulder.displayName = 'Boulder';

useGLTF.preload('./models/Boulder.glb');
